name: devcontainer
author: Vladimir Silyaev
description: Setup devcontainer on ubuntu GitHub runner
inputs:
  name:
    description: "Name of container saved in the repository, default 'devcontainer.ci'"
    required: false
    default: 'devcontainer.ci'
  registry:
    description: 'Server address of Docker registry. If not set then will default to Docker Hub'
    required: false
    default: 'ghcr.io'
  username:
    description: 'Username used to log against the Docker registry'
    required: true
  password:
    description: 'Password or personal access token used to log against the Docker registry'
    required: true

outputs:
  exec:
    description: 'prefix that should be inserted to run commands in the container'
    value: ${{ steps.setup.outputs.exec }}

runs:
  using: "composite"
  steps:
    - name: devcontainer setup
      shell: bash
      id: setup
      run: |
        echo "::group::build"
        npm install -g @devcontainers/cli
        IMAGE_ID=${{ inputs.registry }}/$GITHUB_REPOSITORY/devcontainers.ci
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        old_id=''
        if docker pull $IMAGE_ID:$GITHUB_REF_NAME; then
          old_id=$(docker image inspect $IMAGE_ID:$GITHUB_REF_NAME --format "{{.ID}}")
        fi
        devcontainer build --image-name $IMAGE_ID --cache-from $IMAGE_ID:$GITHUB_REF_NAME --workspace-folder .
        echo "::group::up"
        devcontainer up --workspace-folder .
        echo "EXEC=devcontainer exec --workspace-folder ." >> $GITHUB_OUTPUT
        echo "::group::push"
        new_id=$(docker image inspect $IMAGE_ID --format "{{.ID}}")
        if [ "$old_id" != "$new_id" ]; then
          if docker tag $IMAGE_ID $IMAGE_ID:$GITHUB_REF_NAME ; then
            if [ -n '${{ inputs.password }}' ]; then
              username='${{ inputs.username }}'
              echo '${{ inputs.password }}' | docker login ${{ inputs.registry }} -u ${username:-'${{ github.actor }}'} --password-stdin
              if docker push $IMAGE_ID:$GITHUB_REF_NAME ; then
                echo "::info :: pushed $IMAGE_ID:$GITHUB_REF_NAME"
              else
                echo "::warning :: can't push $IMAGE_ID:$GITHUB_REF_NAME"
              fi
              docker logout ${{ inputs.registry }}
            fi
          fi
        fi
